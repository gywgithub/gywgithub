{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1700223511502},{"_id":"source/_posts/前端上传文件前检测文件数据.md","hash":"eb0078190eb5d2c9481135cbe52ddf1431d133e8","modified":1700647916605},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1700223511502},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1700223511503},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1700223511502},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1700223511502},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1700223511503},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1700223511514},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1700223511503},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1700223511503},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1700223511503},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1700223511504},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1700223511505},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1700223511504},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1700223511505},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1700223511505},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1700223511505},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1700223511504},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1700223511506},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1700223511513},{"_id":"themes/landscape/layout/.DS_Store","hash":"edeedcf25312a76e65a1fb7dd41949200f329caa","modified":1700648809070},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1700223511512},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1700223511512},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1700223511514},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1700223511512},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1700223511513},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1700223511513},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1700223511513},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1700223511510},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1700223511511},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1700223511510},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1700223511511},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1700223511511},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1700223511506},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1700223511506},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1700223511506},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1700223511504},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1700223511507},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1700223511507},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1700223511507},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1700223511507},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"8fbf8946db56141e685bd9f148533f6195607257","modified":1700647916606},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1700223511508},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1700223511508},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1700223511515},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1700223511509},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1700223511522},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1700223511530},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1700223511531},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1700223511532},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1700223511532},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1700223511531},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1700223511536},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1700223511538},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1700223511536},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1700223511533},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1700223511508},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1700223511533},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1700223511509},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1700223511537},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1700223511509},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1700223511509},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1700223511516},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1700223511517},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1700223511518},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1700223511518},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1700223511519},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1700223511520},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1700223511509},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1700223511508},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1700223511521},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1700223511521},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1700223511519},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1700223511523},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1700223511520},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1700223511520},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1700223511524},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1700223511528},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1700223511534},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1700223511534},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1700223511534},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1700223511535},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1700223511519},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1700223511535},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1700223511535},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1700223511527},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1700223511530},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1700223511526},{"_id":"public/2023/11/17/hello-world/index.html","hash":"d1b910a43e231e5856e3b8d6454744497ca3644b","modified":1700698165128},{"_id":"public/archives/index.html","hash":"a89bf810fabbffb63a568f7bb8230d690b6b8f76","modified":1700698165128},{"_id":"public/archives/2023/index.html","hash":"357e40e3a40e8ab1e350837f2fd56b76b1c16161","modified":1700698165128},{"_id":"public/archives/2023/11/index.html","hash":"16c7290ae2d7cb41ed4ad822f9e481fe98d5aa56","modified":1700698165128},{"_id":"public/2023/11/22/前端上传文件前检测文件数据/index.html","hash":"a3264e81867b01fd7f6e032dbe0cc0c8ed9e7d65","modified":1700698165128},{"_id":"public/index.html","hash":"b412c46ff502f0fca3e644dd704e759820418402","modified":1700698165128},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1700698165128},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1700698165128},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1700698165128},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1700698165128},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1700698165128},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1700698165128},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1700698165128},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1700698165128},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1700698165128},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1700698165128},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1700698165128},{"_id":"public/css/style.css","hash":"3986ef4b1f56bf0ac3bc45aab261e0278794c3f1","modified":1700698165128},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1700698165128},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1700698165128},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1700698165128},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1700698165128},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1700698165128},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1700698165128},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1700698165128},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1700698165128},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1700698165128},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1700698165128},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1700698165128}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-11-17T12:18:31.501Z","updated":"2023-11-17T12:18:31.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpafrzfr0000i7463biqa5g7","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"前端上传文件前检测文件数据","date":"2023-11-22T09:09:50.000Z","_content":"\n\n## 海军本部大佐-利刃队员-克比\n\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/181f1026f8c34828a6244d2150e97697~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1256&h=713&s=1244629&e=png&b=c5cfd7)\n\n\n## 前言\n\n项目中的一个批量导入数据的需求，批量导入数据是用的 `excel`，需要前端上传 `excel` 文件时先将文件中的数据解析一下，然后根据业务需求对每一列的字段进行一些基础校验，如字段是否非空，字符串长度是否超出范围等等，接下来就来梳理一下这个需求的基本实现\n\n## 思路分析\n\n根据需求分析得到批量导入数据使用的 `excel`，上传前对 `excel` 文件中的数据做一些基础校验，可以上传前先将 `excel` 解析成 `json`，得到 `json` 数据后再根据 `json` 中的格式，进行按需校验\n\n## 实战操作\n\n### 准备导入文件\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c7062ca9fba4b7c9e52c9f47df07083~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=912&h=472&s=52789&e=png&b=ffffff)\n\n这里模拟了一个基本的 `excel` 数据，第一行是表头，下面是表体数据，模拟了三条数据，假设每列数据都是必填\n\n### 构建上传组件\n\n这里使用 `element` 的 `el-upload` 组件，设置组件的 `change` 事件 `:on-change=\"handleChange\"` ，使文件发生变化时获取对应的 `file` 对象\n\n```html\n<el-upload\n  class=\"upload-demo\"\n  drag\n  action=\"https://jsonplaceholder.typicode.com/posts/\"\n  :file-list=\"fileList\"\n  :auto-upload=\"false\"\n  :on-change=\"handleChange\"\n>\n  <i class=\"el-icon-upload\"></i>\n  <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n  <div class=\"el-upload__tip\" slot=\"tip\">只能上传excel文件</div>\n</el-upload>\n```\n\n### 获取excel文件内容\n\n通过 `handleChange` 事件得到 `file` 对象，根据 `FileReader` 读取文件内容\n\n```js\nhandleChange(file) {\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      // 读取 Excel 文件内容\n      const data = e.target.result;\n      // 处理 Excel 文件内容，获取表格数据\n      this.processExcelData(data);\n    };\n\n    reader.readAsArrayBuffer(file.raw);\n  }\n}\n```\n\n> **注意！**\n> \n> `reader.readAsArrayBuffer(file.raw);` 里面传的参数是 `file.raw`，`file.raw` 才是 `readAsArrayBuffer` 需要的 `blob` 对象\n\n### 处理excel获取json数据\n\n这里使用 `processExcelData()` 函数解析 `excel` 表格数据，解析表格数据使用 `xlsx` 库，解析 `excel` 文件数据这里分为以下几个步骤\n\n1. 使用 `String.fromCharCode.apply(null, new Uint8Array(data))` 得到文件二进制字符串\n2. 使用 `XLSX.read(binaryString, { type: \"binary\" })` 将二进制字符串转成 `workbook` 对象\n3. 通过 `worksheet` 获取 `worksheet`\n4. 使用 `XLSX.utils.sheet_to_json(worksheet, { header: 1 });` 将 `worksheet` 转为 `json` 对象\n5. 得到的 `json` 对象后进行数据解析，从第二行开始验证数据，判断每一行的每列数据是否为空，如果有数据，则进下一步，如果为空，则打印错误日志（需求场景中是如果出现校验错误应该限制上传操作）\n\n\n```js\nprocessExcelData(data) {\n  const binaryString = String.fromCharCode.apply(\n    null,\n    new Uint8Array(data)\n  );\n\n  // 将二进制字符串转为workbook\n  const workbook = XLSX.read(binaryString, { type: \"binary\" });\n\n  // 获取第一个sheet\n  const sheetName = workbook.SheetNames[0];\n  const worksheet = workbook.Sheets[sheetName];\n\n  // 将sheet转为json对象·\n  const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n  // 获取表头\n  const titleList = jsonData[0];\n  jsonData.forEach((item, index) => {\n    if (index > 0) {\n      for (let i = 0; i < titleList.length; i++) {\n        if (item[i]) {\n        } else {\n          console.error(\"第 \" + (index + 1) + \" 行的第 \" + (i + 1) + \" 列 \" + titleList[i] + \" 为空\");\n        }\n      }\n    }\n  });\n},\n```\n\n到这里整个需求的最核心的部分在 `Demo` 中都已经实现了，剩下的就是业务场景中按需调整部分代码逻辑就行了\n\n> **提示！**\n> \n> 1. 这里面的获取 `sheet` 时要基于实际业务情况， `Demo` 中默认是只有一个 `sheet`\n> 2. `Demo` 中的表头数据默认也是只有第一行\n\n## 演示效果\n\n简单说明一下这里面的操作逻辑，页面刷新后，打开控制台，选择 `test.xlsx` 文件，文件变化后查看控制台解析校验结果\n\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/804c1da8018d471bb7d2cb6ea8da93f0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2550&h=998&s=286068&e=png&b=fffefe)\n\n\n## 技术栈\n\n- vue: 2.6.14\n- element ui: 2.15.14\n- xlsx: 0.17.0\n\n## Demo地址\n\n### 完整代码\n\nhttps://github.com/gywgithub/Front-end-function-examples/blob/main/element/upload-excel.html\n\n### Excel测试文件\n\nhttps://github.com/gywgithub/Front-end-function-examples/blob/main/element/test.xlsx\n\n## 写在最后\n\n关于这种比较通用的文件上传或者文件解析功能，在项目里适合基于业务封装成通用的组件或函数，在未来类似的需求中可以相对快速完成相关功能\n\n关于文件解析校验，还有更优雅的实现思路吗？\n\n\n> 欢迎大家讨论交流，如果喜欢本文章或感觉文章有用，用你那发财的小手点赞、收藏再走呗 `^_^`\n>\n> 微信公众号：草帽Lufei\n\n\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1fd6d3bc93444bbb257fc45e1826b11~tplv-k3u1fbpfcp-watermark.image?)\n\n\n\n\n","source":"_posts/前端上传文件前检测文件数据.md","raw":"---\ntitle: 前端上传文件前检测文件数据\ndate: 2023-11-22 17:09:50\ntags:\n---\n\n\n## 海军本部大佐-利刃队员-克比\n\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/181f1026f8c34828a6244d2150e97697~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1256&h=713&s=1244629&e=png&b=c5cfd7)\n\n\n## 前言\n\n项目中的一个批量导入数据的需求，批量导入数据是用的 `excel`，需要前端上传 `excel` 文件时先将文件中的数据解析一下，然后根据业务需求对每一列的字段进行一些基础校验，如字段是否非空，字符串长度是否超出范围等等，接下来就来梳理一下这个需求的基本实现\n\n## 思路分析\n\n根据需求分析得到批量导入数据使用的 `excel`，上传前对 `excel` 文件中的数据做一些基础校验，可以上传前先将 `excel` 解析成 `json`，得到 `json` 数据后再根据 `json` 中的格式，进行按需校验\n\n## 实战操作\n\n### 准备导入文件\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c7062ca9fba4b7c9e52c9f47df07083~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=912&h=472&s=52789&e=png&b=ffffff)\n\n这里模拟了一个基本的 `excel` 数据，第一行是表头，下面是表体数据，模拟了三条数据，假设每列数据都是必填\n\n### 构建上传组件\n\n这里使用 `element` 的 `el-upload` 组件，设置组件的 `change` 事件 `:on-change=\"handleChange\"` ，使文件发生变化时获取对应的 `file` 对象\n\n```html\n<el-upload\n  class=\"upload-demo\"\n  drag\n  action=\"https://jsonplaceholder.typicode.com/posts/\"\n  :file-list=\"fileList\"\n  :auto-upload=\"false\"\n  :on-change=\"handleChange\"\n>\n  <i class=\"el-icon-upload\"></i>\n  <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n  <div class=\"el-upload__tip\" slot=\"tip\">只能上传excel文件</div>\n</el-upload>\n```\n\n### 获取excel文件内容\n\n通过 `handleChange` 事件得到 `file` 对象，根据 `FileReader` 读取文件内容\n\n```js\nhandleChange(file) {\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      // 读取 Excel 文件内容\n      const data = e.target.result;\n      // 处理 Excel 文件内容，获取表格数据\n      this.processExcelData(data);\n    };\n\n    reader.readAsArrayBuffer(file.raw);\n  }\n}\n```\n\n> **注意！**\n> \n> `reader.readAsArrayBuffer(file.raw);` 里面传的参数是 `file.raw`，`file.raw` 才是 `readAsArrayBuffer` 需要的 `blob` 对象\n\n### 处理excel获取json数据\n\n这里使用 `processExcelData()` 函数解析 `excel` 表格数据，解析表格数据使用 `xlsx` 库，解析 `excel` 文件数据这里分为以下几个步骤\n\n1. 使用 `String.fromCharCode.apply(null, new Uint8Array(data))` 得到文件二进制字符串\n2. 使用 `XLSX.read(binaryString, { type: \"binary\" })` 将二进制字符串转成 `workbook` 对象\n3. 通过 `worksheet` 获取 `worksheet`\n4. 使用 `XLSX.utils.sheet_to_json(worksheet, { header: 1 });` 将 `worksheet` 转为 `json` 对象\n5. 得到的 `json` 对象后进行数据解析，从第二行开始验证数据，判断每一行的每列数据是否为空，如果有数据，则进下一步，如果为空，则打印错误日志（需求场景中是如果出现校验错误应该限制上传操作）\n\n\n```js\nprocessExcelData(data) {\n  const binaryString = String.fromCharCode.apply(\n    null,\n    new Uint8Array(data)\n  );\n\n  // 将二进制字符串转为workbook\n  const workbook = XLSX.read(binaryString, { type: \"binary\" });\n\n  // 获取第一个sheet\n  const sheetName = workbook.SheetNames[0];\n  const worksheet = workbook.Sheets[sheetName];\n\n  // 将sheet转为json对象·\n  const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n  // 获取表头\n  const titleList = jsonData[0];\n  jsonData.forEach((item, index) => {\n    if (index > 0) {\n      for (let i = 0; i < titleList.length; i++) {\n        if (item[i]) {\n        } else {\n          console.error(\"第 \" + (index + 1) + \" 行的第 \" + (i + 1) + \" 列 \" + titleList[i] + \" 为空\");\n        }\n      }\n    }\n  });\n},\n```\n\n到这里整个需求的最核心的部分在 `Demo` 中都已经实现了，剩下的就是业务场景中按需调整部分代码逻辑就行了\n\n> **提示！**\n> \n> 1. 这里面的获取 `sheet` 时要基于实际业务情况， `Demo` 中默认是只有一个 `sheet`\n> 2. `Demo` 中的表头数据默认也是只有第一行\n\n## 演示效果\n\n简单说明一下这里面的操作逻辑，页面刷新后，打开控制台，选择 `test.xlsx` 文件，文件变化后查看控制台解析校验结果\n\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/804c1da8018d471bb7d2cb6ea8da93f0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2550&h=998&s=286068&e=png&b=fffefe)\n\n\n## 技术栈\n\n- vue: 2.6.14\n- element ui: 2.15.14\n- xlsx: 0.17.0\n\n## Demo地址\n\n### 完整代码\n\nhttps://github.com/gywgithub/Front-end-function-examples/blob/main/element/upload-excel.html\n\n### Excel测试文件\n\nhttps://github.com/gywgithub/Front-end-function-examples/blob/main/element/test.xlsx\n\n## 写在最后\n\n关于这种比较通用的文件上传或者文件解析功能，在项目里适合基于业务封装成通用的组件或函数，在未来类似的需求中可以相对快速完成相关功能\n\n关于文件解析校验，还有更优雅的实现思路吗？\n\n\n> 欢迎大家讨论交流，如果喜欢本文章或感觉文章有用，用你那发财的小手点赞、收藏再走呗 `^_^`\n>\n> 微信公众号：草帽Lufei\n\n\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1fd6d3bc93444bbb257fc45e1826b11~tplv-k3u1fbpfcp-watermark.image?)\n\n\n\n\n","slug":"前端上传文件前检测文件数据","published":1,"updated":"2023-11-22T10:11:56.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpafrzg20001i7460bicedew","content":"<h2 id=\"海军本部大佐-利刃队员-克比\"><a href=\"#海军本部大佐-利刃队员-克比\" class=\"headerlink\" title=\"海军本部大佐-利刃队员-克比\"></a>海军本部大佐-利刃队员-克比</h2><p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/181f1026f8c34828a6244d2150e97697~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1256&h=713&s=1244629&e=png&b=c5cfd7\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>项目中的一个批量导入数据的需求，批量导入数据是用的 <code>excel</code>，需要前端上传 <code>excel</code> 文件时先将文件中的数据解析一下，然后根据业务需求对每一列的字段进行一些基础校验，如字段是否非空，字符串长度是否超出范围等等，接下来就来梳理一下这个需求的基本实现</p>\n<h2 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h2><p>根据需求分析得到批量导入数据使用的 <code>excel</code>，上传前对 <code>excel</code> 文件中的数据做一些基础校验，可以上传前先将 <code>excel</code> 解析成 <code>json</code>，得到 <code>json</code> 数据后再根据 <code>json</code> 中的格式，进行按需校验</p>\n<h2 id=\"实战操作\"><a href=\"#实战操作\" class=\"headerlink\" title=\"实战操作\"></a>实战操作</h2><h3 id=\"准备导入文件\"><a href=\"#准备导入文件\" class=\"headerlink\" title=\"准备导入文件\"></a>准备导入文件</h3><p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c7062ca9fba4b7c9e52c9f47df07083~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=912&h=472&s=52789&e=png&b=ffffff\"></p>\n<p>这里模拟了一个基本的 <code>excel</code> 数据，第一行是表头，下面是表体数据，模拟了三条数据，假设每列数据都是必填</p>\n<h3 id=\"构建上传组件\"><a href=\"#构建上传组件\" class=\"headerlink\" title=\"构建上传组件\"></a>构建上传组件</h3><p>这里使用 <code>element</code> 的 <code>el-upload</code> 组件，设置组件的 <code>change</code> 事件 <code>:on-change=&quot;handleChange&quot;</code> ，使文件发生变化时获取对应的 <code>file</code> 对象</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-upload</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;upload-demo&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">drag</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">action</span>=<span class=\"string\">&quot;https://jsonplaceholder.typicode.com/posts/&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:file-list</span>=<span class=\"string\">&quot;fileList&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:auto-upload</span>=<span class=\"string\">&quot;false&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:on-change</span>=<span class=\"string\">&quot;handleChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-icon-upload&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-upload__text&quot;</span>&gt;</span>将文件拖到此处，或<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>点击上传<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-upload__tip&quot;</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;tip&quot;</span>&gt;</span>只能上传excel文件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-upload</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取excel文件内容\"><a href=\"#获取excel文件内容\" class=\"headerlink\" title=\"获取excel文件内容\"></a>获取excel文件内容</h3><p>通过 <code>handleChange</code> 事件得到 <code>file</code> 对象，根据 <code>FileReader</code> 读取文件内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">handleChange</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>();</span><br><span class=\"line\">    reader.<span class=\"property\">onload</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 读取 Excel 文件内容</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> data = e.<span class=\"property\">target</span>.<span class=\"property\">result</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 处理 Excel 文件内容，获取表格数据</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">processExcelData</span>(data);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    reader.<span class=\"title function_\">readAsArrayBuffer</span>(file.<span class=\"property\">raw</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注意！</strong></p>\n<p><code>reader.readAsArrayBuffer(file.raw);</code> 里面传的参数是 <code>file.raw</code>，<code>file.raw</code> 才是 <code>readAsArrayBuffer</code> 需要的 <code>blob</code> 对象</p>\n</blockquote>\n<h3 id=\"处理excel获取json数据\"><a href=\"#处理excel获取json数据\" class=\"headerlink\" title=\"处理excel获取json数据\"></a>处理excel获取json数据</h3><p>这里使用 <code>processExcelData()</code> 函数解析 <code>excel</code> 表格数据，解析表格数据使用 <code>xlsx</code> 库，解析 <code>excel</code> 文件数据这里分为以下几个步骤</p>\n<ol>\n<li>使用 <code>String.fromCharCode.apply(null, new Uint8Array(data))</code> 得到文件二进制字符串</li>\n<li>使用 <code>XLSX.read(binaryString, &#123; type: &quot;binary&quot; &#125;)</code> 将二进制字符串转成 <code>workbook</code> 对象</li>\n<li>通过 <code>worksheet</code> 获取 <code>worksheet</code></li>\n<li>使用 <code>XLSX.utils.sheet_to_json(worksheet, &#123; header: 1 &#125;);</code> 将 <code>worksheet</code> 转为 <code>json</code> 对象</li>\n<li>得到的 <code>json</code> 对象后进行数据解析，从第二行开始验证数据，判断每一行的每列数据是否为空，如果有数据，则进下一步，如果为空，则打印错误日志（需求场景中是如果出现校验错误应该限制上传操作）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">processExcelData</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> binaryString = <span class=\"title class_\">String</span>.<span class=\"property\">fromCharCode</span>.<span class=\"title function_\">apply</span>(</span><br><span class=\"line\">    <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(data)</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将二进制字符串转为workbook</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">read</span>(binaryString, &#123; <span class=\"attr\">type</span>: <span class=\"string\">&quot;binary&quot;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取第一个sheet</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> sheetName = workbook.<span class=\"property\">SheetNames</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> worksheet = workbook.<span class=\"property\">Sheets</span>[sheetName];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将sheet转为json对象·</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> jsonData = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">sheet_to_json</span>(worksheet, &#123; <span class=\"attr\">header</span>: <span class=\"number\">1</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取表头</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> titleList = jsonData[<span class=\"number\">0</span>];</span><br><span class=\"line\">  jsonData.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; titleList.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item[i]) &#123;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&quot;第 &quot;</span> + (index + <span class=\"number\">1</span>) + <span class=\"string\">&quot; 行的第 &quot;</span> + (i + <span class=\"number\">1</span>) + <span class=\"string\">&quot; 列 &quot;</span> + titleList[i] + <span class=\"string\">&quot; 为空&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>到这里整个需求的最核心的部分在 <code>Demo</code> 中都已经实现了，剩下的就是业务场景中按需调整部分代码逻辑就行了</p>\n<blockquote>\n<p><strong>提示！</strong></p>\n<ol>\n<li>这里面的获取 <code>sheet</code> 时要基于实际业务情况， <code>Demo</code> 中默认是只有一个 <code>sheet</code></li>\n<li><code>Demo</code> 中的表头数据默认也是只有第一行</li>\n</ol>\n</blockquote>\n<h2 id=\"演示效果\"><a href=\"#演示效果\" class=\"headerlink\" title=\"演示效果\"></a>演示效果</h2><p>简单说明一下这里面的操作逻辑，页面刷新后，打开控制台，选择 <code>test.xlsx</code> 文件，文件变化后查看控制台解析校验结果</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/804c1da8018d471bb7d2cb6ea8da93f0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2550&h=998&s=286068&e=png&b=fffefe\"></p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><ul>\n<li>vue: 2.6.14</li>\n<li>element ui: 2.15.14</li>\n<li>xlsx: 0.17.0</li>\n</ul>\n<h2 id=\"Demo地址\"><a href=\"#Demo地址\" class=\"headerlink\" title=\"Demo地址\"></a>Demo地址</h2><h3 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h3><p><a href=\"https://github.com/gywgithub/Front-end-function-examples/blob/main/element/upload-excel.html\">https://github.com/gywgithub/Front-end-function-examples/blob/main/element/upload-excel.html</a></p>\n<h3 id=\"Excel测试文件\"><a href=\"#Excel测试文件\" class=\"headerlink\" title=\"Excel测试文件\"></a>Excel测试文件</h3><p><a href=\"https://github.com/gywgithub/Front-end-function-examples/blob/main/element/test.xlsx\">https://github.com/gywgithub/Front-end-function-examples/blob/main/element/test.xlsx</a></p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>关于这种比较通用的文件上传或者文件解析功能，在项目里适合基于业务封装成通用的组件或函数，在未来类似的需求中可以相对快速完成相关功能</p>\n<p>关于文件解析校验，还有更优雅的实现思路吗？</p>\n<blockquote>\n<p>欢迎大家讨论交流，如果喜欢本文章或感觉文章有用，用你那发财的小手点赞、收藏再走呗 <code>^_^</code></p>\n<p>微信公众号：草帽Lufei</p>\n</blockquote>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1fd6d3bc93444bbb257fc45e1826b11~tplv-k3u1fbpfcp-watermark.image\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"海军本部大佐-利刃队员-克比\"><a href=\"#海军本部大佐-利刃队员-克比\" class=\"headerlink\" title=\"海军本部大佐-利刃队员-克比\"></a>海军本部大佐-利刃队员-克比</h2><p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/181f1026f8c34828a6244d2150e97697~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1256&h=713&s=1244629&e=png&b=c5cfd7\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>项目中的一个批量导入数据的需求，批量导入数据是用的 <code>excel</code>，需要前端上传 <code>excel</code> 文件时先将文件中的数据解析一下，然后根据业务需求对每一列的字段进行一些基础校验，如字段是否非空，字符串长度是否超出范围等等，接下来就来梳理一下这个需求的基本实现</p>\n<h2 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h2><p>根据需求分析得到批量导入数据使用的 <code>excel</code>，上传前对 <code>excel</code> 文件中的数据做一些基础校验，可以上传前先将 <code>excel</code> 解析成 <code>json</code>，得到 <code>json</code> 数据后再根据 <code>json</code> 中的格式，进行按需校验</p>\n<h2 id=\"实战操作\"><a href=\"#实战操作\" class=\"headerlink\" title=\"实战操作\"></a>实战操作</h2><h3 id=\"准备导入文件\"><a href=\"#准备导入文件\" class=\"headerlink\" title=\"准备导入文件\"></a>准备导入文件</h3><p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c7062ca9fba4b7c9e52c9f47df07083~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=912&h=472&s=52789&e=png&b=ffffff\"></p>\n<p>这里模拟了一个基本的 <code>excel</code> 数据，第一行是表头，下面是表体数据，模拟了三条数据，假设每列数据都是必填</p>\n<h3 id=\"构建上传组件\"><a href=\"#构建上传组件\" class=\"headerlink\" title=\"构建上传组件\"></a>构建上传组件</h3><p>这里使用 <code>element</code> 的 <code>el-upload</code> 组件，设置组件的 <code>change</code> 事件 <code>:on-change=&quot;handleChange&quot;</code> ，使文件发生变化时获取对应的 <code>file</code> 对象</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-upload</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;upload-demo&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">drag</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">action</span>=<span class=\"string\">&quot;https://jsonplaceholder.typicode.com/posts/&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:file-list</span>=<span class=\"string\">&quot;fileList&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:auto-upload</span>=<span class=\"string\">&quot;false&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:on-change</span>=<span class=\"string\">&quot;handleChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-icon-upload&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-upload__text&quot;</span>&gt;</span>将文件拖到此处，或<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>点击上传<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-upload__tip&quot;</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;tip&quot;</span>&gt;</span>只能上传excel文件<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-upload</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取excel文件内容\"><a href=\"#获取excel文件内容\" class=\"headerlink\" title=\"获取excel文件内容\"></a>获取excel文件内容</h3><p>通过 <code>handleChange</code> 事件得到 <code>file</code> 对象，根据 <code>FileReader</code> 读取文件内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">handleChange</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>();</span><br><span class=\"line\">    reader.<span class=\"property\">onload</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 读取 Excel 文件内容</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> data = e.<span class=\"property\">target</span>.<span class=\"property\">result</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 处理 Excel 文件内容，获取表格数据</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">processExcelData</span>(data);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    reader.<span class=\"title function_\">readAsArrayBuffer</span>(file.<span class=\"property\">raw</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注意！</strong></p>\n<p><code>reader.readAsArrayBuffer(file.raw);</code> 里面传的参数是 <code>file.raw</code>，<code>file.raw</code> 才是 <code>readAsArrayBuffer</code> 需要的 <code>blob</code> 对象</p>\n</blockquote>\n<h3 id=\"处理excel获取json数据\"><a href=\"#处理excel获取json数据\" class=\"headerlink\" title=\"处理excel获取json数据\"></a>处理excel获取json数据</h3><p>这里使用 <code>processExcelData()</code> 函数解析 <code>excel</code> 表格数据，解析表格数据使用 <code>xlsx</code> 库，解析 <code>excel</code> 文件数据这里分为以下几个步骤</p>\n<ol>\n<li>使用 <code>String.fromCharCode.apply(null, new Uint8Array(data))</code> 得到文件二进制字符串</li>\n<li>使用 <code>XLSX.read(binaryString, &#123; type: &quot;binary&quot; &#125;)</code> 将二进制字符串转成 <code>workbook</code> 对象</li>\n<li>通过 <code>worksheet</code> 获取 <code>worksheet</code></li>\n<li>使用 <code>XLSX.utils.sheet_to_json(worksheet, &#123; header: 1 &#125;);</code> 将 <code>worksheet</code> 转为 <code>json</code> 对象</li>\n<li>得到的 <code>json</code> 对象后进行数据解析，从第二行开始验证数据，判断每一行的每列数据是否为空，如果有数据，则进下一步，如果为空，则打印错误日志（需求场景中是如果出现校验错误应该限制上传操作）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">processExcelData</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> binaryString = <span class=\"title class_\">String</span>.<span class=\"property\">fromCharCode</span>.<span class=\"title function_\">apply</span>(</span><br><span class=\"line\">    <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(data)</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将二进制字符串转为workbook</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">read</span>(binaryString, &#123; <span class=\"attr\">type</span>: <span class=\"string\">&quot;binary&quot;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取第一个sheet</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> sheetName = workbook.<span class=\"property\">SheetNames</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> worksheet = workbook.<span class=\"property\">Sheets</span>[sheetName];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将sheet转为json对象·</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> jsonData = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">sheet_to_json</span>(worksheet, &#123; <span class=\"attr\">header</span>: <span class=\"number\">1</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取表头</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> titleList = jsonData[<span class=\"number\">0</span>];</span><br><span class=\"line\">  jsonData.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; titleList.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item[i]) &#123;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&quot;第 &quot;</span> + (index + <span class=\"number\">1</span>) + <span class=\"string\">&quot; 行的第 &quot;</span> + (i + <span class=\"number\">1</span>) + <span class=\"string\">&quot; 列 &quot;</span> + titleList[i] + <span class=\"string\">&quot; 为空&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>到这里整个需求的最核心的部分在 <code>Demo</code> 中都已经实现了，剩下的就是业务场景中按需调整部分代码逻辑就行了</p>\n<blockquote>\n<p><strong>提示！</strong></p>\n<ol>\n<li>这里面的获取 <code>sheet</code> 时要基于实际业务情况， <code>Demo</code> 中默认是只有一个 <code>sheet</code></li>\n<li><code>Demo</code> 中的表头数据默认也是只有第一行</li>\n</ol>\n</blockquote>\n<h2 id=\"演示效果\"><a href=\"#演示效果\" class=\"headerlink\" title=\"演示效果\"></a>演示效果</h2><p>简单说明一下这里面的操作逻辑，页面刷新后，打开控制台，选择 <code>test.xlsx</code> 文件，文件变化后查看控制台解析校验结果</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/804c1da8018d471bb7d2cb6ea8da93f0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2550&h=998&s=286068&e=png&b=fffefe\"></p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><ul>\n<li>vue: 2.6.14</li>\n<li>element ui: 2.15.14</li>\n<li>xlsx: 0.17.0</li>\n</ul>\n<h2 id=\"Demo地址\"><a href=\"#Demo地址\" class=\"headerlink\" title=\"Demo地址\"></a>Demo地址</h2><h3 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h3><p><a href=\"https://github.com/gywgithub/Front-end-function-examples/blob/main/element/upload-excel.html\">https://github.com/gywgithub/Front-end-function-examples/blob/main/element/upload-excel.html</a></p>\n<h3 id=\"Excel测试文件\"><a href=\"#Excel测试文件\" class=\"headerlink\" title=\"Excel测试文件\"></a>Excel测试文件</h3><p><a href=\"https://github.com/gywgithub/Front-end-function-examples/blob/main/element/test.xlsx\">https://github.com/gywgithub/Front-end-function-examples/blob/main/element/test.xlsx</a></p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>关于这种比较通用的文件上传或者文件解析功能，在项目里适合基于业务封装成通用的组件或函数，在未来类似的需求中可以相对快速完成相关功能</p>\n<p>关于文件解析校验，还有更优雅的实现思路吗？</p>\n<blockquote>\n<p>欢迎大家讨论交流，如果喜欢本文章或感觉文章有用，用你那发财的小手点赞、收藏再走呗 <code>^_^</code></p>\n<p>微信公众号：草帽Lufei</p>\n</blockquote>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1fd6d3bc93444bbb257fc45e1826b11~tplv-k3u1fbpfcp-watermark.image\"></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}